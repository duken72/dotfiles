export OS=$(echo $(grep -v _ID /etc/os-release | grep ID=) | cut -d'=' -f 2)
export FCI_IP=172.16.0.2

# Overwrite existing commands for better defaults
# enable color support for ls and grep
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias ldir='vdir'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
alias grepr='grep -R'

# Replace ls with exa
if [ -x /usr/bin/eza ]; then
    export EZA_COLORS="uu=1;31:da=1;35"
    alias   eza='eza --git --git-ignore'
    alias     l='eza'
    alias    ls='eza'
    alias    la='eza -a'
    alias    ll='eza -l --icons'
    alias   lla='eza -la --icons'
    alias  ldir='eza -lD --icons'
    alias tree1='eza -l --tree --icons --level=1'
    alias tree2='eza -l --tree --icons --level=2'
    alias    cL='cl; eza'
    function cd {
        builtin cd "$@" && eza --git --git-ignore
    }
else
    alias    l='ls -C'
    alias   la='ls -A'
    alias   ll='ls -lh'
    alias  lla='ls -Alh'
    alias ldir="ls -lhF --color | grep --color=never '^d'"
    alias   cL='cl; ls'
    function cd {
        builtin cd "$@" && ls -CA
    }
fi

# alias rm='rm -i' # interactive
# alias mv='mv -i' # interactive
# alias cat='cat -n' # with line numbers
# [ -x /usr/bin/pygmentize ] && alias cat='pygmentize -g'
[ -x /usr/bin/bat ] && alias cat='bat'
alias mkdir='mkdir -p'
alias dirs='dirs -v'
alias cp='cp -r' # recursive
if [ -x /usr/bin/rsync ]; then
    alias rsync='rsync -rahp --info=progress2'
    #alias cp='rsync'
fi
alias less='less -N -R --use-color -DC+y -Du+b -DP+g -DN+y -DE+r'
alias ip='ip -color=auto' # with colors
alias dmesg='dmesg --color=always' # with colors
alias diff='diff --color=auto' # with colors
alias zip='zip -er9' # encryption and recursive


# -------------------------------------------------------- #
# CD GENERIC
alias   c='cl; cd'
alias  ..='cd ..'
alias ...='cd ../..'
alias  .2='cd ../..'
alias  .3='cd ../../..'
alias  .4='cd ../../../..'
alias  .5='cd ../../../../..'

alias   dfs='c ~/dotfiles'
alias   pkg='c ~/dotfiles/pkg'
alias  docs='c ~/Documents'
alias books='c ~/Documents/books'
alias    pd='c ~/Documents/personal-docs'
alias  down='c ~/Downloads'
alias music='c ~/Music'
alias  pics='c ~/Pictures'
alias   img='c ~/Pictures'
alias   vid='c ~/Videos'


# -------------------------------------------------------- #
# System
# Memory
alias   df='df -h'
alias  duh='du -ahd 1'
alias  mem='ncdu --show-graph --show-percent --group-directories-first --show-itemcount'
alias hist='history'
alias   cl='clear' # for terminator, just Ctrl+L
alias   rb='sudo shutdown -r now'
alias  sdn='sudo shutdown now'

# dotfiles and config
alias      ag='alias | grep'
alias  ealias='v ~/.aliases && . ~/.aliases'
alias ebashrc='v ~/.bashrc  && . ~/.bashrc'
alias  ezshrc='v ~/.zshrc   && . ~/.zshrc'
alias  talias='. ~/.aliases'
alias tbashrc='. ~/.bashrc'
alias  tzshrc='. ~/.zshrc'
alias      cf='c ~/dotfiles/config'
alias     cfg='c ~/.config'
alias polybar='polybar --reload duck-mainbar'
# syncing with git
alias dst='dfs && git status'
alias dpl='dfs && git pull origin'
function dps {    # dotfiles push
    cd ~/dotfiles
    gaps "$1"
}

# -------------------------------------------------------- #
# OS SPECIFIC

# OSD
[[ $OS = 'osd' ]] && alias vc='osd-vpn-connect'

# Ubuntu
if [ $OS = 'ubuntu' ]; then
    # apt - Advance Package Tool
    alias     ai='sudo apt -y install'
    alias  aptud='sudo apt update'
    alias  aptug='sudo apt dist-upgrade'
    alias aptudg='aptud && time aptug'
    # dist-upgrade will install & remove packages as necessary to resolve dependencies
    alias     fd='fdfind'
fi

# Arch Linux
if [ $OS = 'arch' ]; then
    # pacman - Package Manager
    alias  pacs='sudo pacman -S'
    alias pacss='pacman -Ss'
    alias  pacr='sudo pacman -R'
    if [ -x /usr/bin/fzf ]; then
        alias pacs="pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S"
        alias pacu="sudo pacman -Sy && pacman -Qqu | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S"
        alias pacr="pacman -Qq | fzf --multi --preview 'pacman -Qi {1}' | xargs -ro sudo pacman -Rns"
    fi
    alias    pacsy='sudo pacman -Sy'
    alias   pacsyu='sudo pacman -Syu'
    alias     pacq='pacman -Q'
    alias     pacg='pacman -Sg'

    # AURA - AUR Helper
    alias    auraa='sudo aura -Akax'
    alias    aurar='sudo aura -R'
    alias   auraas='aura -As'
    alias   auraau='sudo aura -Aukax'

    # System cleaning
    alias  orphans='pacman -Qtdq | sudo pacman -Rns -'
    alias orphans2='pacman -Qqd | sudo pacman -Rsu -'
    alias  cache_show='find ~/.cache/ -type f -atime +72'
    alias cache_clean='find ~/.cache/ -type f -atime +72 -delete'
fi

# DUAL BOOT with WINDOWS
# WIN=/media/${USERNAME}/Windows
# alias unmountw='sudo umount ${WIN}'
# alias   mountw='unmountw; sudo mount.ntfs-3g /dev/nvme0n1p3 ${WIN}'


# -------------------------------------------------------- #
# Applications specific

# Generic
function o {
    if [[ "$1" == *".pdf" ]]; then
        xdg-open "$1"; exit
    else
        xdg-open "$1"
    fi
}
alias of='o .'
alias run='./run.sh'

# Mount
alias       usbg='echo "usbmount /dev/drive_name, drive_name from lsblk"'
alias   usbmount='udisksctl mount -b' # /dev/drive_name, drive_name from lsblk
alias usbunmount='udisksctl unmount -b' # /dev/drive_name, drive_name from lsblk

# Python
alias    py='python3'
alias   ipy='ipython3'
alias   act='source venv/bin/activate'
alias deact='deactivate'

# Editors
# Vim, Neovim
if [ -x /usr/bin/nvim ]; then
    alias v='nvim'
    alias sv='sudo -E nvim'
else
    alias v='vim'
    alias sv='sudo -E vim'
fi
# VSCode
if [ -x /usr/bin/code ]; then
    alias co='code'
    alias coh='code . && exit'
fi
# Jupyter-notebook
function jn {
    tmux new -d -s jupyter "jupyter-notebook '$1'"
}
function jl {
    tmux new -d -s jupyter "jupyter-lab '$1'"
}

# convert a file to pdf, at least work with pptx
alias pdfConvert='soffice --headless --convert-to pdf'

# Latex
alias tlmgr='/usr/share/texmf-dist/scripts/texlive/tlmgr.pl --usermode'

# Others
alias ra='ranger'
alias clock='tty-clock -sc -C 1 -f %A,%d-%b-%Y'

# Utilities
# alias rwifi='nmcli radio wifi off && nmcli radio wifi on'
alias vnkey='echo "Switch with Alt+Shift+K" && ibus-daemon'
alias weather='curl wttr.in Berlin'
alias speedtest='curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -'
alias myip='dig +short txt ch whoami.cloudflare @1.0.0.1'
function diet {
    cd ~/Documents && clear
    gawk -v dow=$(date +%A) '$2 == dow {$1=$7=""; print}' diet2.md 
    # cat diet.md
}
alias gtd='o ~/WS/learningNotes/notes/images/workflow-diagram-gtd.png'
alias ssh-ubuntu='ssh -p 2222 duken72@localhost'

# Alsa mixer
alias usound='amixer -q -D pulse sset Master 14%+'
alias dsound='amixer -q -D pulse sset Master 14%-'

# Git
alias    g='git'
alias   gi='git init'
alias  gcl='git clone'
alias  gst='git status'
alias   ga='git add'
alias  gaa='git add .'
alias grst='git restore'
alias  grs='git reset'
alias  gci='git commit -m'
alias  gac='git commit -am'
alias gcis='git commit -S -m'
alias gacs='git commit -S -am'
alias  gft='git fetch'
alias  gps='git push origin'
alias  gpl='git pull origin --prune'
alias  gbr='git branch -a'
alias  gbd='git branch -D'
alias  gdf='git diff'
function gap {
    gaa; gci "$1"; gps
}
function gaps {
    gaa; gcis "$1"; gps
}

# Docker
alias   dp='docker pull'
alias   dt='docker tag'
alias   di='docker images'
alias drmi='docker rmi'
alias dcon='docker ps'
alias  dca='docker ps -a'
alias  drm='docker rm'
alias dros='docker run -it --rm --env="DISPLAY" --env="QT_X11_NO_MITSHM=1" --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" osrf/ros:humble-desktop'

# Steam
function steamid {
    find ~/.local/share/Steam/steamapps/ -maxdepth 1 -type f -name '*.acf' -exec awk -F '"' '/"appid|name/{ printf $4 "|" } END { print "" }' {} \; | column -t -s '|' | sort -k 2 | grep -i "$1"
    echo "prime-run steam steam://rungameid/[steamid]"
}

# Nvidia
alias nvidia-smi='clear; nvidia-smi'

# -------------------------------------------------------- #
# Workspaces
# on GitHub
alias    ws='c ~/WS'
alias   cfd='c ~/WS/codingForDummies && gst'
alias    cv='c ~/WS/Curriculum-Vitae-Latex'
alias notes='c ~/WS/learningNotes'
alias   nov='c ~/WS/learningNotes && v'
alias   nol='c ~/WS/notesLatex'
alias    nn='c ~/WS/neural-network-test && v'
alias  ccom='c ~/WS/coding-competitions && v'
alias   aoc='c ~/WS/Advent-of-Code/AoC-2022'
alias    cs='c ~/WS/codingForDummies/cppFD/CS'
alias   phd='c ~/WS/phd-rbo'
alias   grl='c ~/WS/test/goalRL-test'

alias    td='c ~/WS/TODO'

# on GitLab
alias    gh='c ~/WS/GitHub/parroplots && act'
alias    gl='c ~/WS/GitLab/parroplots && act'
alias   gl1='c ~/WS/GitLab/parrobots && act'

# ROS
if [[ "$SHELL" == "/usr/bin/zsh" ]]; then
    alias ract='source devel/setup.zsh'
elif [[ "$SHELL" == "/usr/bin/bash" ]]; then
    alias ract='source devel/setup.bash'
fi
alias r2ws='cd ~/WS/ros2_ws     && ract && cd src'
alias  rws='cd ~/WS/ros_ws      && ract && cd src'
alias  cws='cd ~/WS/catkin_ws   && ract && cd src'
alias  dws='cd ~/WS/duc_ws      && ract && cd src'

# TUB
alias   tubm='nasd && nasp && ws'
alias  tubum='sudo umount ~/WS/nasd && ~/WS/nasp'
function mnas {
    if mountpoint -q ~/WS/"$2"; then
        echo "Already mounted"
        cd ~/WS/"$2"
    else
        STR=$(networkctl status)
        IP_LAB="130.149.238"
        if [[ "$STR" == *"$IP_LAB"* ]]; then
            echo "Already in the lab network"
        else
            echo "NOT in the lab network, connect via VPN ..."
            sudo openconnect -v -u duken72 --authgroup 2-TU-Full-Tunnel vpn.tu-berlin.de
        fi
        sudo mount -t nfs -o rw,noatime,nodiratime,async storage.robotics.tu-berlin.de:/volume1/data/"$1" ~/WS/"$2" && cd ~/WS/"$2"
    fi
}
function mafs {
    if mountpoint -q ~/WS/"$2"; then
        echo "Already mounted"
        cd ~/WS/"$2"
    else
        echo "Mounting directory ..."
        sshfs duken72@sshgate.tu-berlin.de:/afs/tu-berlin.de/units/Fak_IV/robotics/"$1" ~/WS/"$2" && cd ~/WS/"$2"
    fi
}
alias  nas='mnas "" nas'
alias nasd='mnas duc nasd'
alias nasp='mnas parrobots nasp'
alias  afs='mafs RBO afs'
alias afsd='mafs Staff/Duc afsd'

# Guide For Dummies
alias    bashg='cat $(fd bashFD.bash ~)'
alias     gitg='cat $(fd gitFD.bash ~)'
alias     vimg='cat $(fd vimFD.bash ~)'
alias    lessg='cat $(fd lessFD.bash ~)'
alias     rosg='cat $(fd rosFD.bash ~)'
alias    ros2g='cat $(fd ros2FD.bash ~)'
alias      pyg='cat $(fd pyFD.py ~)'
alias  dockerg='cat $(fd dockerFD.bash ~)'
alias   bashgg='rg $(fd bashFD.bash ~) -e'
alias    gitgg='rg $(fd gitFD.bash ~) -e'
alias    vimgg='rg $(fd vimFD.bash ~) -e'
alias    rosgg='rg $(fd rosFD.bash ~) -e'
alias   ros2gg='rg $(fd ros2FD.bash ~) -e'
alias     pygg='rg $(fd pyFD.py ~) -e'
alias dockergg='rg $(fd dockerFD.bash ~) -e'

# BORIS
function boris {
    SOCK=/tmp/.X11-unix
    XAUTH=/tmp/.docker.xauth
    xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
    chmod 777 $XAUTH
    docker run --rm -ti --net=host -e DISPLAY -v ${HOME}:/home/${USER} -w /home/${USER} -v $XSOCK:$XSOCK -v $XAUTH:$XAUTH -e XAUTHORITY=$XAUTH olivierfriard/boris
}
